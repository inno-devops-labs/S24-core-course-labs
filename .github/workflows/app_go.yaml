name: app_go

on:
  push:
    branches:
      - "*"
    paths:
      - ".github/workflows/**"
      - "app_go/**"
  pull_request:
    branches:
      - "main"
    paths:
      - ".github/workflows/**"
      - "app_go/**"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
          cache: false
      
      # - name: golangci-lint
        # uses: golangci/golangci-lint-action@v4
        # with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          # version: v1.54

          # Optional: working directory, useful for monorepos
          # working-directory: app_go

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0 

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
          cache: false

      - name: Install dependencies
        working-directory: app_go
        run: |
          go mod download
          go mod verify


      - name: Build
        working-directory: app_go
        run: go build -v ./cmd/app_go

      # - name: Test with the Go CLI
      #   working-directory: app_go/tests
      #   run: go test
    
  docker_push:
    runs-on: ubuntu-latest
    needs: 
      - lint
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Login docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Make .env
        working-directory: app_go
        run: |
          touch .env
          echo "ENV=local\n \
          SERVER_HOST=0.0.0.0\nSERVER_PORT=8080 \
          DB_HOST=127.0.0.1 \
          POSTGRES_USER=${{ secrets.DB_USER }} \
          POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
          POSTGRES_DB=${{ secrets.DB_NAME }}" > .env

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./app_go/
          file: ./app_go/Dockerfile
          build-args: runcmd=app_go
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops:app_go
